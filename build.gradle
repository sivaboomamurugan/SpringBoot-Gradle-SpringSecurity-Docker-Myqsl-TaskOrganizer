buildscript {
	ext {
		springBootVersion = '2.1.2.RELEASE'
	}
	repositories {
		maven {
			url "https://plugins.gradle.org/m2/"
		}
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'idea'
apply plugin: 'com.palantir.docker'

group = 'pjt'
version = '1.0'
sourceCompatibility = '1.8'

bootJar {
	baseName = 'task-organizer'
	version =  '1.0'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'mysql:mysql-connector-java'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.security:spring-security-test'
}

springBoot {
	mainClassName = "com.siva.taskorganizer.TaskorganizerApplication"
}

def javaVersion = JavaVersion.VERSION_1_8;
sourceCompatibility = javaVersion;
targetCompatibility = javaVersion;
task enforceVersion << {
	def foundVersion = JavaVersion.current();
	if (foundVersion != javaVersion)
		throw new IllegalStateException("Wrong Java version; required is "
				+ javaVersion + ", but found " + foundVersion);
}

compileJava.dependsOn(enforceVersion);

task wrapper(type: Wrapper) {
	gradleVersion = '4.10.2'
}

task unpack(type: Copy) {
	dependsOn bootJar
	from(zipTree(tasks.bootJar.outputs.files.singleFile))
	into("build/dependency")
}
docker {
	name "${project.group}/${bootJar.baseName}"
	copySpec.from(tasks.unpack.outputs).into("dependency")
	buildArgs(['DEPENDENCY': "dependency"])
}


